{"version":2,"kind":"Notebook","sha256":"a90a819b782c9f9459a22509a59342b93e09e5edfe45d5aec5be79b8ef7143a5","slug":"group-editing","location":"/notebooks/group_editing.ipynb","dependencies":[],"frontmatter":{"title":"üï∞Ô∏è ALL ABOUT DURATIONS AND SEGMENTATION IN THE PYSCENE DATA üï∞Ô∏è","content_includes_title":false,"kernelspec":{"name":"friends","display_name":"Python (friends)","language":"python"},"github":"https://github.com/brainhack-school2025/analyses_friends_annotations","keywords":[],"edit_url":"https://github.com/brainhack-school2025/analyses_friends_annotations/blob/clean-dev/notebooks/group_editing.ipynb","exports":[{"format":"ipynb","filename":"group_editing.ipynb","url":"/build/group_editing-f791022f89c9bcbdf70fb77f8c7919aa.ipynb"}]},"widgets":{},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"import matplotlib.pyplot as plt","visibility":"hide","key":"GfaSOcf9E4"},{"type":"output","id":"AjUjYioBaPV3axMLH708d","data":[],"visibility":"show","key":"LIzo2kt2Xx"}],"visibility":"show","key":"ywQR7OLOdp"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"import pandas as pd\nimport seaborn as sns\n","visibility":"hide","key":"NuX00Z2IGr"},{"type":"output","id":"kyabS7gt9u_R78QzDvgQ0","data":[],"visibility":"show","key":"lnRcPeUXSQ"}],"visibility":"show","key":"B7yRf0knqV"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"df= pd.read_csv(\"../output/scenes_data.tsv\", sep='\\t')","visibility":"hide","key":"mVsKu5ACjd"},{"type":"output","id":"pgyTfaopVoLjxZew3PCfv","data":[],"visibility":"show","key":"zcoBgPCg3I"}],"visibility":"show","key":"nNDxExDjAE"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"df[\"season\"] = df[\"episode\"].str.extract(r's(\\d+)', expand=False).astype(int)\ndf[\"episode_short\"] = df[\"episode\"].str.extract(r'(s\\d+e\\d+)', expand=False).str.upper()\nmean_duration = df.groupby(\"episode_short\", as_index=False)[\"duration\"].mean()\n","visibility":"hide","key":"MPLG8eEplW"},{"type":"output","id":"r9Rigr05jB7T1-kS2L4Ck","data":[],"visibility":"show","key":"RxuPckPRwj"}],"visibility":"show","key":"pyqzUSZeG2"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"AVERAGE DURATION üï∞Ô∏è OF SEGMENTS PER EPISODES","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"iNiaIQIxIH"}],"identifier":"average-duration-of-segments-per-episodes","label":"AVERAGE DURATION üï∞Ô∏è OF SEGMENTS PER EPISODES","html_id":"average-duration-of-segments-per-episodes","implicit":true,"key":"j5vm5mzZA2"}],"key":"C4UuteWLBZ"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"plt.figure(figsize=(20, 8))\nax = sns.barplot(data=mean_duration, x=\"episode_short\", y=\"duration\", palette=\"viridis\")\nax.set_xticks(ax.get_xticks()[::5])  # show every 5th label\nax.set_xticklabels(ax.get_xticklabels(), rotation=45, ha=\"right\")\nplt.title(\"Average duration of scenes per episode\")\nplt.ylabel(\"Average duration (s)\")\nplt.xlabel(\"Episodes\")\nplt.tight_layout()\nplt.show()\n","visibility":"hide","key":"WUNo8ddn6c"},{"type":"output","id":"Mp9T91R82ilWZy6umB23C","data":[{"name":"stderr","output_type":"stream","text":"/tmp/ipykernel_8030/3446811800.py:2: FutureWarning: \n\nPassing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.\n\n  ax = sns.barplot(data=mean_duration, x=\"episode_short\", y=\"duration\", palette=\"viridis\")\n"},{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"23a3213bb4ebe1376f0dd00458781668","path":"/build/23a3213bb4ebe1376f0dd00458781668.png"},"text/plain":{"content":"<Figure size 2000x800 with 1 Axes>","content_type":"text/plain"}}}],"visibility":"show","key":"TGnUMksQfK"}],"visibility":"show","key":"QqlBZ35SK8"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"\nscene_count = df.groupby(\"episode_short\")[\"scene_number\"].count().reset_index(name=\"num_scenes\")","visibility":"hide","key":"WO2OQJlIOr"},{"type":"output","id":"zrPfJ1ycMwzptdsItz5zk","data":[],"visibility":"show","key":"RnwTopZIo9"}],"visibility":"show","key":"frypCZMvit"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"NUMBER OF SCENES üß© IN EPISODES","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"DDy3riZZfo"}],"identifier":"number-of-scenes-in-episodes","label":"NUMBER OF SCENES üß© IN EPISODES","html_id":"number-of-scenes-in-episodes","implicit":true,"key":"tHXbyJ09x4"}],"key":"pPfKF3MURY"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"plt.figure(figsize=(20, 8))\nax = sns.barplot(data=scene_count, x=\"episode_short\", y=\"num_scenes\", palette=\"viridis\")\nax.set_xticks(ax.get_xticks()[::5])  # show every 5th label\nax.set_xticklabels(ax.get_xticklabels(), rotation=45, ha=\"right\")\nax.set_yticks(range(0, 500, 50)) \nplt.title(\"n of scenes per episode\")\nplt.ylabel(\" n of scenes\")\nplt.xlabel(\"Episodes\")\nplt.tight_layout()\nplt.show()","visibility":"hide","key":"oohPvHjZda"},{"type":"output","id":"uZBqxEeFDd8UUgijBeAmo","data":[{"name":"stderr","output_type":"stream","text":"/tmp/ipykernel_8030/441019428.py:2: FutureWarning: \n\nPassing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.\n\n  ax = sns.barplot(data=scene_count, x=\"episode_short\", y=\"num_scenes\", palette=\"viridis\")\n"},{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"32b0d2dfbed59dc6dfe0fb1bdf5481ea","path":"/build/32b0d2dfbed59dc6dfe0fb1bdf5481ea.png"},"text/plain":{"content":"<Figure size 2000x800 with 1 Axes>","content_type":"text/plain"}}}],"visibility":"show","key":"JV9pM17QYQ"}],"visibility":"show","key":"oiExGxl1eH"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"episode_durations = df.groupby(\"episode_short\")[\"duration\"].sum().reset_index(name=\"episode_duration\")","visibility":"hide","key":"MVYX8ZzDK6"},{"type":"output","id":"dD9pgNYSYz7Tr4ytN5EJA","data":[],"visibility":"show","key":"b5BI9C3iHO"}],"visibility":"show","key":"aP4CGvYCfq"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"DURATION OF EPISODES üï∞Ô∏è","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"I7XUDyPVsX"}],"identifier":"duration-of-episodes","label":"DURATION OF EPISODES üï∞Ô∏è","html_id":"duration-of-episodes","implicit":true,"key":"ZYEi15gN0i"}],"key":"U9vs0KxbMM"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"plt.figure(figsize=(20, 8))\nax = sns.barplot(data=episode_durations, x=\"episode_short\", y=\"episode_duration\", palette=\"viridis\")\nax.set_xticks(ax.get_xticks()[::5])  # show every 5th label\nax.set_xticklabels(ax.get_xticklabels(), rotation=45, ha=\"right\")\nplt.title(\"Duration of episodes\")\nplt.ylabel(\"Duration (s)\")\nplt.xlabel(\"Episodes\")\nplt.tight_layout()\nplt.show()\n","visibility":"hide","key":"RgDKi2hPyc"},{"type":"output","id":"u_O-ZY7sQBNzhwXxY9Gok","data":[{"name":"stderr","output_type":"stream","text":"/tmp/ipykernel_8030/1315073239.py:2: FutureWarning: \n\nPassing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.\n\n  ax = sns.barplot(data=episode_durations, x=\"episode_short\", y=\"episode_duration\", palette=\"viridis\")\n"},{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"6e43ac1e4995d44fb2c246dcac67cc08","path":"/build/6e43ac1e4995d44fb2c246dcac67cc08.png"},"text/plain":{"content":"<Figure size 2000x800 with 1 Axes>","content_type":"text/plain"}}}],"visibility":"show","key":"SAijlCcsju"}],"visibility":"show","key":"n9MWfINQZ9"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"SCENES DURATIONS üï∞Ô∏è","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ZG0QfB3C9T"}],"identifier":"scenes-durations","label":"SCENES DURATIONS üï∞Ô∏è","html_id":"scenes-durations","implicit":true,"key":"A8c5t2DyfI"}],"key":"KENs7slsfL"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"import pandas as pd\nimport plotly.graph_objects as go\n\n# Sort seasons\nseasons = sorted(df['season'].unique())\n\n# Create figure\nfig = go.Figure()\nall_traces = []\n\n# Track how many episodes per season (for visibility masks)\nseason_trace_counts = []\n\n# Create violin traces for each season's episodes\nfor season in seasons:\n    filtered_df = df[df['season'] == season]\n    episodes = sorted(filtered_df['episode_short'].unique())\n    trace_count = 0\n    \n    for ep in episodes:\n        ep_df = filtered_df[filtered_df['episode_short'] == ep]\n\n        trace = go.Violin(\n            x=[ep] * len(ep_df),\n            y=ep_df['duration'],\n            name=f\"Ep {ep}\",\n            box_visible=True,\n            meanline_visible=True,\n            points=\"all\",\n            visible=(season == seasons[0]),  # Only show first season initially\n            customdata=ep_df[['global_scene_number', 'duration']].values,\n            hovertemplate=(\n                \"Episode: %{x}<br>\" +\n                \"Global scene: %{customdata[0]}<br>\" +\n                \"Duration: %{customdata[1]} seconds<br>\" +\n                \"<extra></extra>\"  # hides the trace name in the tooltip\n    )\n)\n        fig.add_trace(trace)\n        trace_count += 1\n\n    season_trace_counts.append(trace_count)\n\n# Compute visibility masks for each season\n# Compute visibility masks for each season\nvisibility_masks = []\ntotal_traces = sum(season_trace_counts)\nstart = 0\nfor count in season_trace_counts:\n    mask = [False] * total_traces\n    for i in range(count):\n        mask[start + i] = True\n    visibility_masks.append(mask)\n    start += count\n\n\n# Create dropdown buttons\ndropdown_buttons = [\n    dict(\n        label=f\"Season {season}\",\n        method=\"update\",\n        args=[\n            {\"visible\": visibility_masks[i]},\n            {\"title\": f\"Scene Duration ‚Äì Season {season}\"}\n        ]\n    )\n    for i, season in enumerate(seasons)\n]\n\n# Update layout\nfig.update_layout(\n    updatemenus=[\n        dict(\n            active=0,\n            buttons=dropdown_buttons,\n            x=0.1,\n            y=1.15,\n            xanchor=\"left\",\n            yanchor=\"top\"\n        )\n    ],\n    title=f\"Scene Duration ‚Äì Season {seasons[0]}\",\n    xaxis_title=\"Episode\",\n    yaxis_title=\"Duration (seconds)\",\n    width=1200,\n    height=600,\n    showlegend=False\n)\n\nfig.show()\n","visibility":"hide","key":"ijOLoWETV1"},{"type":"output","id":"ruG0thNemFxnkCqyXS1bI","data":[{"output_type":"display_data","metadata":{},"data":{"application/vnd.plotly.v1+json":{"content_type":"application/vnd.plotly.v1+json","hash":"e53aae783566c3c89a7d0a8c97ac70e1","path":"/build/e53aae783566c3c89a7d0a8c97ac70e1.json"},"image/png":{"content_type":"image/png","hash":"9b662676bc06f64d23413043192abd3f","path":"/build/9b662676bc06f64d23413043192abd3f.png"}}}],"visibility":"show","key":"Y9lMBjbKkq"}],"visibility":"show","key":"CZXnJ9ceLF"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"import pandas as pd\nimport plotly.graph_objects as go\n\n# Sort seasons\nseasons = sorted(df['season'].unique())\n\n# Create figure\nfig = go.Figure()\nseason_trace_count = []\n\n# Add one scatter trace per season\nfor i, season in enumerate(seasons):\n    filtered_df = df[df['season'] == season]\n\n    trace = go.Scatter(\n        x=filtered_df['global_scene_number'],\n        y=filtered_df['duration'],\n        mode='markers',\n        name=f\"Season {season}\",\n        customdata=filtered_df[['episode_short', 'scene_number']],\n        hovertemplate=(\n            \"Global Scene: %{x}<br>\" +\n            \"Duration: %{y} seconds<br>\" +\n            \"Episode: %{customdata[0]}<br>\" +\n            \"Scene: %{customdata[1]}<br>\" +\n            \"<extra></extra>\"\n        ),\n        visible=(i == 0)  # Only show first season initially\n    )\n    fig.add_trace(trace)\n\n# Create visibility masks for dropdown\nvisibility_masks = [\n    [i == j for i in range(len(seasons))]\n    for j in range(len(seasons))\n]\n\n# Create dropdown buttons\ndropdown_buttons = [\n    dict(\n        label=f\"Season {season}\",\n        method=\"update\",\n        args=[\n            {\"visible\": visibility_masks[i]},\n            {\"title\": f\"Scene Duration ‚Äì Season {season}\"}\n        ]\n    )\n    for i, season in enumerate(seasons)\n]\n\n# Update layout\nfig.update_layout(\n    updatemenus=[\n        dict(\n            active=0,\n            buttons=dropdown_buttons,\n            x=0.1,\n            y=1.2,\n            xanchor=\"left\",\n            yanchor=\"top\"\n        )\n    ],\n    title=f\"Scene Duration ‚Äì Season {seasons[0]}\",\n    xaxis_title=\"Global Scene Number\",\n    yaxis_title=\"Duration (seconds)\",\n    width=1200,\n    height=600\n)\n\nfig.show()\n","visibility":"hide","key":"EnchvSaku1"},{"type":"output","id":"PzKWoV4AImgHLm5wrUSsW","data":[{"output_type":"display_data","metadata":{},"data":{"application/vnd.plotly.v1+json":{"content_type":"application/vnd.plotly.v1+json","hash":"1aad38f6acf64d10a3d8868b4a9588e7","path":"/build/1aad38f6acf64d10a3d8868b4a9588e7.json"},"image/png":{"content_type":"image/png","hash":"2a0ff76653a16e9a4090509a6bc1254c","path":"/build/2a0ff76653a16e9a4090509a6bc1254c.png"}}}],"visibility":"show","key":"SdUpwkLZDU"}],"visibility":"show","key":"o6pEZTSdj4"}],"key":"cy57WYExOy"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"üï∞Ô∏è ALL ABOUT DURATIONS AND SEGMENTATION IN THE MANUAL SEGMENTATION DATA üï∞Ô∏è","url":"/group-manual-seg","group":"Introduction"},"next":{"title":"MACHINE GAZINGü§ñüëÅÔ∏è‚Äçüó®Ô∏è‚ú®","url":"/group-saliency-copy1","group":"Introduction"}}},"domain":"http://localhost:3001"}